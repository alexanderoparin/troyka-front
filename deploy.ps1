# –°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ Troyka –¥–ª—è Windows PowerShell
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\deploy.ps1 [environment]
# environment: dev, staging, production (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: production)

param(
    [string]$Environment = "production"
)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
function Write-Log {
    param([string]$Message)
    Write-Host "[$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')] $Message" -ForegroundColor Blue
}

function Write-Success {
    param([string]$Message)
    Write-Host "[$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')] ‚úÖ $Message" -ForegroundColor Green
}

function Write-Warning {
    param([string]$Message)
    Write-Host "[$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')] ‚ö†Ô∏è $Message" -ForegroundColor Yellow
}

function Write-Error {
    param([string]$Message)
    Write-Host "[$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')] ‚ùå $Message" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏
$ErrorActionPreference = "Stop"

Write-Log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π Troyka Frontend –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: $Environment"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js
try {
    $nodeVersion = node -v
    Write-Success "Node.js –≤–µ—Ä—Å–∏—è: $nodeVersion"
} catch {
    Write-Error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js
$nodeVersionNumber = [int]($nodeVersion -replace 'v(\d+)\..*', '$1')
if ($nodeVersionNumber -lt 18) {
    Write-Error "–¢—Ä–µ–±—É–µ—Ç—Å—è Node.js –≤–µ—Ä—Å–∏–∏ 18 –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $nodeVersion"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è npm
try {
    $npmVersion = npm -v
    Write-Success "npm –≤–µ—Ä—Å–∏—è: $npmVersion"
} catch {
    Write-Error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è git
try {
    $gitVersion = git --version
    Write-Success "Git –≤–µ—Ä—Å–∏—è: $gitVersion"
} catch {
    Write-Error "git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ git
$gitStatus = git status --porcelain
if ($gitStatus) {
    Write-Warning "–ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –∏—Ö –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º."
    $continue = Read-Host "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–µ–ø–ª–æ–π? (y/N)"
    if ($continue -ne "y" -and $continue -ne "Y") {
        Write-Log "–î–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω–µ–Ω"
        exit 0
    }
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–∑ git
Write-Log "üì• –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ git..."
git fetch origin
git pull origin main

Write-Success "–ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω –∏–∑ git"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
Write-Log "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
npm ci --production=false

Write-Success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ TypeScript
Write-Log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã TypeScript..."
npm run type-check

Write-Success "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"

# –õ–∏–Ω—Ç–∏–Ω–≥
Write-Log "üîç –ó–∞–ø—É—Å–∫–∞–µ–º –ª–∏–Ω—Ç–µ—Ä..."
npm run lint

Write-Success "–õ–∏–Ω—Ç–∏–Ω–≥ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ"

# –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
Write-Log "üèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç..."
npm run build

Write-Success "–ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
Write-Log "üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

if (-not (Test-Path ".env.local")) {
    Write-Warning "–§–∞–π–ª .env.local –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏."
    Write-Host "–ü—Ä–∏–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ .env.local:"
    Write-Host "NEXT_PUBLIC_JAVA_API_URL=http://your-backend-url"
    Write-Host "NEXT_PUBLIC_JAVA_API_TIMEOUT=30000"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –¥–µ–ø–ª–æ—è
$DeployDir = "deploy"
Write-Log "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–µ–ø–ª–æ—è: $DeployDir"

if (Test-Path $DeployDir) {
    Remove-Item -Recurse -Force $DeployDir
}

New-Item -ItemType Directory -Path $DeployDir | Out-Null

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
Write-Log "üìã –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞..."

# –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
Copy-Item -Recurse -Force ".next" "$DeployDir\"
Copy-Item -Recurse -Force "public" "$DeployDir\"
if (Test-Path "out") {
    Copy-Item -Recurse -Force "out" "$DeployDir\"
}

# –ö–æ–ø–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
Copy-Item "package.json" "$DeployDir\"
if (Test-Path "package-lock.json") {
    Copy-Item "package-lock.json" "$DeployDir\"
}
Copy-Item "next.config.js" "$DeployDir\"
Copy-Item "tsconfig.json" "$DeployDir\"
Copy-Item "tailwind.config.ts" "$DeployDir\"
Copy-Item "postcss.config.js" "$DeployDir\"

# –ö–æ–ø–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (Test-Path ".env.local") {
    Copy-Item ".env.local" "$DeployDir\"
    Write-Success "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
} else {
    Write-Warning "–§–∞–π–ª .env.local –Ω–µ –Ω–∞–π–¥–µ–Ω"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞
$StartScript = @"
@echo off
set NODE_ENV=production
set PORT=%PORT%
if "%PORT%"=="" set PORT=3000

echo üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Troyka Frontend –Ω–∞ –ø–æ—Ä—Ç—É %PORT%
npm start
"@

$StartScript | Out-File -FilePath "$DeployDir\start.bat" -Encoding ASCII

# –°–æ–∑–¥–∞–Ω–∏–µ README –¥–ª—è –¥–µ–ø–ª–æ—è
$ReadmeContent = @"
# Troyka Frontend

## –ó–∞–ø—É—Å–∫

``````bash
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
npm ci --production

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
start.bat
``````

## –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

- `NEXT_PUBLIC_JAVA_API_URL` - URL –±—ç–∫–µ–Ω–¥–∞
- `NEXT_PUBLIC_JAVA_API_TIMEOUT` - –¢–∞–π–º–∞—É—Ç API –∑–∞–ø—Ä–æ—Å–æ–≤
- `PORT` - –ü–æ—Ä—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 3000)

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞

- `.next\` - –°–æ–±—Ä–∞–Ω–Ω–æ–µ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
- `public\` - –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
- `package.json` - –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
- `start.bat` - –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
"@

$ReadmeContent | Out-File -FilePath "$DeployDir\README.md" -Encoding UTF8

Write-Success "–§–∞–π–ª—ã –¥–ª—è –¥–µ–ø–ª–æ—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $DeployDir"

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è –¥–µ–ø–ª–æ—è
$ArchiveName = "troyka-front-$(Get-Date -Format 'yyyyMMdd-HHmmss').zip"
Write-Log "üì¶ –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤: $ArchiveName"

# –°–æ–∑–¥–∞–µ–º ZIP –∞—Ä—Ö–∏–≤
Compress-Archive -Path "$DeployDir\*" -DestinationPath $ArchiveName -Force

Write-Success "–ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $ArchiveName"

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–ø–ª–æ–µ
Write-Log "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–ø–ª–æ–µ:"
Write-Host "  - –û–∫—Ä—É–∂–µ–Ω–∏–µ: $Environment"
Write-Host "  - –ê—Ä—Ö–∏–≤: $ArchiveName"
$archiveSize = (Get-Item $ArchiveName).Length / 1MB
Write-Host "  - –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞: $([math]::Round($archiveSize, 2)) MB"
Write-Host "  - –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–µ–ø–ª–æ—è: $DeployDir"

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
Write-Host ""
Write-Log "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:"
Write-Host "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∞—Ä—Ö–∏–≤ $ArchiveName –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
Write-Host "2. –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤: Expand-Archive -Path $ArchiveName -DestinationPath ."
Write-Host "3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm ci --production"
Write-Host "4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: .\start.bat"
Write-Host ""
Write-Host "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker:"
Write-Host "1. –°–æ–∑–¥–∞–π—Ç–µ Dockerfile –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏"
Write-Host "2. –°–æ–±–µ—Ä–∏—Ç–µ –æ–±—Ä–∞–∑: docker build -t troyka-front ."
Write-Host "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: docker run -p 3000:3000 troyka-front"

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
Write-Log "üßπ –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
Remove-Item -Recurse -Force $DeployDir

Write-Success "üéâ –î–µ–ø–ª–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
Write-Success "–ê—Ä—Ö–∏–≤ –≥–æ—Ç–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä: $ArchiveName"
